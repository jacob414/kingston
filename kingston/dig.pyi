from . import lang as lang
from typing import Any

class Attr:
    infer_types: Any = ...
    PrimType: Any = ...
    __bind__: Any = ...
    @classmethod
    def create(cls, name: Any, value: Any): ...
    name: Any = ...
    def __init__(self, name: Any, value: Any) -> None: ...
    @staticmethod
    def isa(other: Any): ...
    def sibling(self, other: Any): ...
    def eq(self, other: Any): ...
    @classmethod
    def infer(cls, name: Any, value: Any): ...
    @property
    def raw_value(self): ...
    @property
    def type_name(self): ...
    def __hash__(self) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...

AttrClass: Any

def xget(obj: Any, idx: Any): ...

class AttrQuery(tuple):
    def __new__(cls, parts: Any, *params: Any, **opts: Any): ...
    @staticmethod
    def from_text(text: Any): ...

def idig(obj: Any, path: Any): ...
def dig(obj: Any, path: Any): ...
