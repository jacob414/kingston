from .lang import arity as arity
from typing import Any, Callable, Iterable, Union

class Mismatch(ValueError): ...

class Match(dict):
    @staticmethod
    def wccmp(needle: Any, match: Any) -> Any: ...
    def case(*params: Any) -> Callable: ...
    def type_match(self, call: Callable, *params: Any, **opts: Any) -> Any: ...
    def wc_scan(self, call: Callable, values: Iterable, **opts: Any) -> Any: ...
    def __call__(self, *params: Any, **opts: Any) -> Union[Iterable[Any], Iterable]: ...

class VMatch(Match):
    def __call__(self, *params: Any, **opts: Any) -> Union[Iterable[Any], Iterable]: ...
